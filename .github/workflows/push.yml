# This workflow builds and pushes build to dist branch
name: Lint, Build, and Publish

on:
  push:
    branches: ["main"]

  workflow_dispatch:

jobs:
  lint_build_publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
      
      - name: Use current Node.js
        uses: actions/setup-node@v3
        with:
          node-version: current

      - name: Install dependencies
        run: |
          npm i -g npm@latest pm2
          npm ci

      - name: Lint
        run: npm run lint

      # We essentially move all required files to a hidden, untracked folder called .out
      - name: BuildTS
        run: |
          npm run build
          mkdir .out
          cp -r * .out
          mv .env-cmdrc .out

      # Then after we checkout the branch, we can overwrite all files with the ones in .out
      # We also include the commit message to be the same as original commit
      - name: Checkout and push to dist
        run: |
          git config user.name "${{ github.event.pusher.name }}"
          git config user.email "${{ github.event.pusher.email }}"
          git fetch origin dist
          rm -rf dist
          git checkout dist
          rm -r *
          mv .out/* .
          mv .out/.env-cmdrc .
          rmdir .out
          git add .
          git commit -m "${{ github.event.head_commit.message }}" || true
          git push origin dist

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'none' # Required by the action
      
      - name: Add to known hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # Omitting output for security
      - name: Deploy to production
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
          DEV_DEPLOY_PATH: ${{ secrets.DEV_DEPLOY_PATH }}
        run: pm2 deploy production > /dev/null

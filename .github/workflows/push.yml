# This workflow builds, pushes build to dist branch, and deploys to production
name: Publish to production

on:
  push:
    branches: ["main"]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  build:
    needs: lint
    runs-on: ubuntu-latest
    environment: Production
    permissions:
      contents: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      # Checkout dist branch simulatenously
      - name: Checkout dev branch
        uses: actions/checkout@v4
        with:
          ref: dist
          path: .dist

      - name: Install dependencies
        run: npm ci

      # We essentially move all required files to the hidden folder
      # that contains the dist branch (checked out simultaneously).
      # npm run deploy automatically builds and registers slash commands
      - name: Build & Deploy
        env:
          TOKEN: ${{ secrets.TOKEN }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
        run: |
          npm run deploy
          rsync -a * .dist
          mv .env-cmdrc .dist

      # We also include the commit message to be the same as original commit
      - name: Commit and push to dist
        run: |
          cd .dist
          git config user.name "${{ github.event.pusher.name }}"
          git config user.email "${{ github.event.pusher.email }}"
          git add .
          git commit -m "${{ github.event.head_commit.message }}" --allow-empty
          git push

  publish:
    needs: [lint, build]
    runs-on: ubuntu-latest
    environment: Production
    permissions:
      contents: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          npm i -g pm2
          npm i dotenv

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Hash known_hosts
        run: ssh-keygen -Hf ~/.ssh/known_hosts

      # Omitting output for security
      - name: Deploy to production
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: pm2 deploy production > /dev/null

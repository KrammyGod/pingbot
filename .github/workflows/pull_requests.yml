# This workflow builds, pushes build to dev-dist branch, and deploys to development
name: Publish to development

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: ["main"]

  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy to development'
        required: true
        default: 'false'

jobs:
  lint:
    runs-on: ubuntu-latest

    # Only trigger for non-drafts or manually triggered
    if: ${{ github.event.pull_request.draft == false || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci
        
      - name: Lint
        run: npm run lint

  cleanup:
    needs: lint
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Delete dev
        uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: Development
          onlyRemoveDeployments: true
      - name: Delete prod
        uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: Development
          onlyRemoveDeployments: true

  build:
    needs: [lint, cleanup]
    runs-on: ubuntu-latest
    environment: Development
    permissions:
      contents: write

    # Only trigger for my PRs or if manually requested
    if: ${{ github.event.pull_request.author_association == 'OWNER' || github.event.inputs.deploy == 'true' }}
    
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      
      # Checkout dist branch simulatenously
      - name: Checkout dev branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: dev-dist
          path: .dist

      - name: Install dependencies
        run: npm ci

      # We essentially move all required files to the hidden folder
      # that contains the dev-dist branch (checked out simultaneously).
      # npm run deploy automatically builds and registers slash commands
      - name: Build & Deploy
        env:
          TOKEN: ${{ secrets.TOKEN }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
        run: |
          npm run deploy
          rsync -a * .dist
          mv .env-cmdrc .dist

      # We also include the commit message to be the same as original commit
      - name: Checkout and push to dev-dist
        run: |
          cd .dist
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add .
          git commit -m "${{ github.event_name == 'workflow_dispatch' && 'Forced Deployment' || github.event.pull_request.head.label }}" --allow-empty
          git push

  publish:
    needs: [lint, build]
    runs-on: ubuntu-latest
    environment: Development
    permissions:
      contents: write
    
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          npm i -g pm2
          npm i dotenv

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Hash known_hosts
        run: ssh-keygen -Hf ~/.ssh/known_hosts

      # Omitting output for security
      - name: Deploy to development
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          DEV_DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: pm2 deploy development > /dev/null
